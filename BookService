package com.example.librarymanagementsystem.service; 
import com.example.librarymanagementsystem.entity.Book; 
import com.example.librarymanagementsystem.repository.BookRepository; 
import org.springframework.beans.factory.annotation.Autowired; 
import org.springframework.stereotype.Service; 
import java.util.List; 
import java.util.Optional; 
@Service 
public class BookService { 
    @Autowired 
    private BookRepository bookRepository; 
    public List<Book> getAllBooks() { 
        return bookRepository.findAll(); 
    } 
    public Optional<Book> getBookById(Long id) { 
        return bookRepository.findById(id); 
    } 
    public Book addBook(Book book) { 
        return bookRepository.save(book); 
    } 
    public Book updateBook(Long id, Book updatedBook) { 
        return bookRepository.findById(id).map(book -> {      
book.setTitle(updatedBook.getTitle());   book.setAuthor(updatedBook.getAuthor());    
book.setCategory(updatedBook.getCategory());       
book.setAvailable(updatedBook.isAvailable()); 
            return bookRepository.save(book); 
        }).orElseThrow(() -> new RuntimeException("Book not found with id " + id)); 
    } 
    public void deleteBook(Long id) { 
        bookRepository.deleteById(id); 
    } 
    public List<Book> searchBooks(String query, String type) { 
        if ("title".equalsIgnoreCase(type)) { 
            return bookRepository.findByTitleContainingIgnoreCase(query); 
        } else if ("author".equalsIgnoreCase(type)) { 
            return bookRepository.findByAuthorContainingIgnoreCase(query); 
        } else if ("category".equalsIgnoreCase(type)) { 
            return bookRepository.findByCategoryIgnoreCase(query); 
        } 
        return List.of(); // Return empty list if type is unknown 
    } 
} 
