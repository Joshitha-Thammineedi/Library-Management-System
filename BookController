package com.example.librarymanagementsystem.controller; 
import com.example.librarymanagementsystem.entity.Book; 
import com.example.librarymanagementsystem.service.BookService; 
import org.springframework.beans.factory.annotation.Autowired; 
import org.springframework.http.HttpStatus; 
import org.springframework.http.ResponseEntity; 
import org.springframework.web.bind.annotation.*; 
import java.util.List; 
@RestController 
@RequestMapping("/api/books") 
public class BookController { 
    @Autowired 
    private BookService bookService; 
    @GetMapping 
    public ResponseEntity<List<Book>> getAllBooks() { 
        List<Book> books = bookService.getAllBooks(); 
        return new ResponseEntity<>(books, HttpStatus.OK); 
    } 
    @GetMapping("/{id}") 
    public ResponseEntity<Book> getBookById(@PathVariable Long id) { 
        return bookService.getBookById(id) 
                .map(book -> new ResponseEntity<>(book, HttpStatus.OK)) 
                .orElse(new ResponseEntity<>(HttpStatus.NOT_FOUND)); 
    } 
    @PostMapping 
    public ResponseEntity<Book> addBook(@RequestBody Book book) { 
        Book newBook = bookService.addBook(book); 
        return new ResponseEntity<>(newBook, HttpStatus.CREATED); 
    } 
    @PutMapping("/{id}") 
    public ResponseEntity<Book> updateBook(@PathVariable Long id, @RequestBody Book 
book) { 
        try { 
            Book updatedBook = bookService.updateBook(id, book); 
            return new ResponseEntity<>(updatedBook, HttpStatus.OK); 
        } catch (RuntimeException e) { 
            return new ResponseEntity<>(HttpStatus.NOT_FOUND); 
        } 
    } 
    @DeleteMapping("/{id}") 
    public ResponseEntity<Void> deleteBook(@PathVariable Long id) { 
        bookService.deleteBook(id); 
        return new ResponseEntity<>(HttpStatus.NO_CONTENT); 
    } 
    @GetMapping("/search") 
    public ResponseEntity<List<Book>> searchBooks(@RequestParam String query, 
@RequestParam String type) { 
        List<Book> books = bookService.searchBooks(query, type); 
        return new ResponseEntity<>(books, HttpStatus.OK); 
    } 
}
